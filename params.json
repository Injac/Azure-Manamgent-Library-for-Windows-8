{"name":"Azure Management Client for WinRT","tagline":"Pain free Azure Manamgent on WinRT","body":"## Azure Management Client for WinRT ##\r\n\r\n## What is it? ##\r\n\r\nYou can write a client app on Windows 8 or Windows 8.1 to manage your Azure subscriptions, without the pain of using the Azure Management REST-API directly.\r\n\r\n## Why? ##\r\n\r\nBecause I started to work on an Azure management client for Windows 8.1.\r\n\r\n## How to use ##\r\n\r\nThe client is written to be used with PFX file descriptions that are imported from existing PFX certificate files, and imported into the certificate store of your WinRT app.\r\n\r\nTo do so, you simply create a FileOpenPicker:\r\n\r\n          var filePicker = new FileOpenPicker();\r\n            filePicker.FileTypeFilter.Add(\".pfx\");\r\n            filePicker.FileTypeFilter.Add(\".PFX\");\r\n            filePicker.ViewMode = PickerViewMode.List;\r\n            filePicker.SuggestedStartLocation = PickerLocationId.ComputerFolder;\r\n            filePicker.SettingsIdentifier = \"picker1\";\r\n            filePicker.CommitButtonText = \"Open PFX file\";\r\n\r\n\t\t\tvar file = await filePicker.PickSingleFileAsync();\r\n\r\nCreate new CertificateCredentials. Pass the file to the constructor of the CertificateCredentials class. Then call the IntializeCredentials method of the CertificateCredentials client. Pass a string as identifier (this value replaces the friendly name of the pfx description) and the password you used to export your PFX file using certmgr on Windows:\r\n\r\n     CertificateCredentials creds = new CertificateCredentials(file);\r\n\r\n            var success = await creds.InitializeCredentials(\"[YOUR IDENTIFIER]\", \"[YOUR PFX PASSWORD]\");\r\n\r\n            \r\n            if(success.Successfull)\r\n            {\r\n                StorageClient cl = new StorageClient(\"[YOUR SUBSCRIPTION ID]\");\r\n                                             \r\n                var storageServices = await cl.ListAsync();\r\n\r\n                if(storageServices.Successfull)\r\n                {\r\n\t\t\t\t\t//Do something here with the data\r\n                }\r\n\r\n            }\r\n\r\nThen you create a client for the Azure services you want to work with. Currently there are the following clients available (list will be updated):\r\n\r\n- StorageClient\r\n\r\nAfter creating the client, you choose the operation, in the code-sample it is the ListAsync() operation, that lists all the storage services available in your subscription.\r\n\r\nYou can contact me on Twitter: [@awsomedevsigner](https://twitter.com/AWSOMEDEVSIGNER \"@awsomedevsigner\")\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}